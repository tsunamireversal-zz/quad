function q.sys.files.find-files-greater-than-1gb() {
find . -type f -size +1024000 -printf "%s:%h%f\n"
}

function q.sys.files.remove-spaces-in-files-and-dirs-recursive() {
find . -name "* *" -type d | rename 's/ /_/g'; find . -name "* *" -type f | rename 's/ /_/g'
}

function q.sys.files.remove-spaces-in-files-recursive() {
find . -name "* *" -type f | rename 's/ /_/g'
}

function q.sys.files.remove-spaces-in-dirs-recursive() {
find . -name "* *" -type d | rename 's/ /_/g'
}

function q.sys.files.remove-inode() {
ls -li
echo "Which inode number to remove?"
read INODE_NB
find . -inum $INODE_NB -exec rm -i {} \;
}


function q.sys.files.cat-without-comments() {
cat $1  | egrep -v '^$|^#|    #'
}

function q.sys.files.rename-replace-spaces() {
for f in *\ *; do mv "$f" "${f// /_}" 2>/dev/null; done
}

function q.sys.files.duplicates-finder() {
find . -type f -printf '%p/ %f\n' | sort -k2 | uniq -f1 --all-repeated=separate
}

function q.sys.files.sync-files-from-specific-date() {
echo "You do it like this:"
echo find A/ -mtime -18 -mtime +1 -exec rsync -auvrp \{\} B/ \;
}

function q.sys.files.lt() {
if [[ $1 == "i" ]];then
  ls -la --time-style=full-iso
elif [[ $1 == "x" ]];then
  ls --time-style='+%d-%m-%Y %H:%M:%S' -l
else
  ls --time-style='+%d-%m-%Y %H:%M:%S' -l
fi
}

function q.sys.files.eom-files() {
eom `ls -t`
}

export -f q.sys.files.find-files-greater-than-1gb
export -f q.sys.files.remove-spaces-in-files-and-dirs-recursive
export -f q.sys.files.remove-spaces-in-files-recursive
export -f q.sys.files.remove-spaces-in-dirs-recursive
export -f q.sys.files.remove-inode
export -f q.sys.files.cat-without-comments
export -f q.sys.files.duplicates-finder
export -f q.sys.files.sync-files-from-specific-date
export -f q.sys.files.lt
export -f q.sys.files.eom-files
export -f q.sys.files.rename-replace-spaces

